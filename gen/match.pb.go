// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: match.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MatchCalendar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClubOneName string `protobuf:"bytes,2,opt,name=club_one_name,json=clubOneName,proto3" json:"club_one_name,omitempty"`
	ClubTwoName string `protobuf:"bytes,3,opt,name=club_two_name,json=clubTwoName,proto3" json:"club_two_name,omitempty"`
	IntendTime  string `protobuf:"bytes,4,opt,name=intend_time,json=intendTime,proto3" json:"intend_time,omitempty"`
	RealTime    string `protobuf:"bytes,5,opt,name=real_time,json=realTime,proto3" json:"real_time,omitempty"`
	MatchRound  int32  `protobuf:"varint,6,opt,name=match_round,json=matchRound,proto3" json:"match_round,omitempty"`
	MatchTurn   string `protobuf:"bytes,7,opt,name=match_turn,json=matchTurn,proto3" json:"match_turn,omitempty"`
	IdClubOne   string `protobuf:"bytes,8,opt,name=id_club_one,json=idClubOne,proto3" json:"id_club_one,omitempty"`
	IdClubTwo   string `protobuf:"bytes,9,opt,name=id_club_two,json=idClubTwo,proto3" json:"id_club_two,omitempty"`
	Season      string `protobuf:"bytes,10,opt,name=season,proto3" json:"season,omitempty"`
	Stadium     string `protobuf:"bytes,11,opt,name=stadium,proto3" json:"stadium,omitempty"`
	MatchStatus string `protobuf:"bytes,12,opt,name=match_status,json=matchStatus,proto3" json:"match_status,omitempty"`
}

func (x *MatchCalendar) Reset() {
	*x = MatchCalendar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchCalendar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchCalendar) ProtoMessage() {}

func (x *MatchCalendar) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchCalendar.ProtoReflect.Descriptor instead.
func (*MatchCalendar) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{0}
}

func (x *MatchCalendar) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MatchCalendar) GetClubOneName() string {
	if x != nil {
		return x.ClubOneName
	}
	return ""
}

func (x *MatchCalendar) GetClubTwoName() string {
	if x != nil {
		return x.ClubTwoName
	}
	return ""
}

func (x *MatchCalendar) GetIntendTime() string {
	if x != nil {
		return x.IntendTime
	}
	return ""
}

func (x *MatchCalendar) GetRealTime() string {
	if x != nil {
		return x.RealTime
	}
	return ""
}

func (x *MatchCalendar) GetMatchRound() int32 {
	if x != nil {
		return x.MatchRound
	}
	return 0
}

func (x *MatchCalendar) GetMatchTurn() string {
	if x != nil {
		return x.MatchTurn
	}
	return ""
}

func (x *MatchCalendar) GetIdClubOne() string {
	if x != nil {
		return x.IdClubOne
	}
	return ""
}

func (x *MatchCalendar) GetIdClubTwo() string {
	if x != nil {
		return x.IdClubTwo
	}
	return ""
}

func (x *MatchCalendar) GetSeason() string {
	if x != nil {
		return x.Season
	}
	return ""
}

func (x *MatchCalendar) GetStadium() string {
	if x != nil {
		return x.Stadium
	}
	return ""
}

func (x *MatchCalendar) GetMatchStatus() string {
	if x != nil {
		return x.MatchStatus
	}
	return ""
}

type MatchCalendarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MatchCalendarRequest) Reset() {
	*x = MatchCalendarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchCalendarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchCalendarRequest) ProtoMessage() {}

func (x *MatchCalendarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchCalendarRequest.ProtoReflect.Descriptor instead.
func (*MatchCalendarRequest) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{1}
}

func (x *MatchCalendarRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{2}
}

func (x *StatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type MatchCalendarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *MatchCalendarResponse_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Message string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MatchCalendarResponse) Reset() {
	*x = MatchCalendarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchCalendarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchCalendarResponse) ProtoMessage() {}

func (x *MatchCalendarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchCalendarResponse.ProtoReflect.Descriptor instead.
func (*MatchCalendarResponse) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{3}
}

func (x *MatchCalendarResponse) GetData() *MatchCalendarResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MatchCalendarResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MatchCalendarListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []*MatchCalendarResponse_Data `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Message string                        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MatchCalendarListResponse) Reset() {
	*x = MatchCalendarListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchCalendarListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchCalendarListResponse) ProtoMessage() {}

func (x *MatchCalendarListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchCalendarListResponse.ProtoReflect.Descriptor instead.
func (*MatchCalendarListResponse) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{4}
}

func (x *MatchCalendarListResponse) GetData() []*MatchCalendarResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MatchCalendarListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ProgressScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId     string `protobuf:"bytes,2,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	ClubName    string `protobuf:"bytes,3,opt,name=club_name,json=clubName,proto3" json:"club_name,omitempty"`
	PlayerName  string `protobuf:"bytes,4,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	GoalType    string `protobuf:"bytes,5,opt,name=goal_type,json=goalType,proto3" json:"goal_type,omitempty"`
	TimeInMatch string `protobuf:"bytes,6,opt,name=time_in_match,json=timeInMatch,proto3" json:"time_in_match,omitempty"`
}

func (x *ProgressScore) Reset() {
	*x = ProgressScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgressScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressScore) ProtoMessage() {}

func (x *ProgressScore) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressScore.ProtoReflect.Descriptor instead.
func (*ProgressScore) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{5}
}

func (x *ProgressScore) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *ProgressScore) GetClubName() string {
	if x != nil {
		return x.ClubName
	}
	return ""
}

func (x *ProgressScore) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *ProgressScore) GetGoalType() string {
	if x != nil {
		return x.GoalType
	}
	return ""
}

func (x *ProgressScore) GetTimeInMatch() string {
	if x != nil {
		return x.TimeInMatch
	}
	return ""
}

type ProgressCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId     string `protobuf:"bytes,2,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	ClubName    string `protobuf:"bytes,3,opt,name=club_name,json=clubName,proto3" json:"club_name,omitempty"`
	PlayerName  string `protobuf:"bytes,4,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	CardType    string `protobuf:"bytes,5,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	TimeInMatch string `protobuf:"bytes,6,opt,name=time_in_match,json=timeInMatch,proto3" json:"time_in_match,omitempty"`
}

func (x *ProgressCard) Reset() {
	*x = ProgressCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgressCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressCard) ProtoMessage() {}

func (x *ProgressCard) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressCard.ProtoReflect.Descriptor instead.
func (*ProgressCard) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{6}
}

func (x *ProgressCard) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *ProgressCard) GetClubName() string {
	if x != nil {
		return x.ClubName
	}
	return ""
}

func (x *ProgressCard) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *ProgressCard) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *ProgressCard) GetTimeInMatch() string {
	if x != nil {
		return x.TimeInMatch
	}
	return ""
}

type ResultScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId        string `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	HomeTeamGoal   int32  `protobuf:"varint,2,opt,name=home_team_goal,json=homeTeamGoal,proto3" json:"home_team_goal,omitempty"`
	AwayTeamGoal   int32  `protobuf:"varint,3,opt,name=away_team_goal,json=awayTeamGoal,proto3" json:"away_team_goal,omitempty"`
	HomeTeam       string `protobuf:"bytes,4,opt,name=home_team,json=homeTeam,proto3" json:"home_team,omitempty"`
	AwayTeam       string `protobuf:"bytes,5,opt,name=away_team,json=awayTeam,proto3" json:"away_team,omitempty"`
	YellowCardHome int32  `protobuf:"varint,6,opt,name=yellow_card_home,json=yellowCardHome,proto3" json:"yellow_card_home,omitempty"`
	YellowCardAway int32  `protobuf:"varint,7,opt,name=yellow_card_away,json=yellowCardAway,proto3" json:"yellow_card_away,omitempty"`
	RedCardHome    int32  `protobuf:"varint,8,opt,name=red_card_home,json=redCardHome,proto3" json:"red_card_home,omitempty"`
	RedCardAway    int32  `protobuf:"varint,9,opt,name=red_card_away,json=redCardAway,proto3" json:"red_card_away,omitempty"`
}

func (x *ResultScore) Reset() {
	*x = ResultScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultScore) ProtoMessage() {}

func (x *ResultScore) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultScore.ProtoReflect.Descriptor instead.
func (*ResultScore) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{7}
}

func (x *ResultScore) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *ResultScore) GetHomeTeamGoal() int32 {
	if x != nil {
		return x.HomeTeamGoal
	}
	return 0
}

func (x *ResultScore) GetAwayTeamGoal() int32 {
	if x != nil {
		return x.AwayTeamGoal
	}
	return 0
}

func (x *ResultScore) GetHomeTeam() string {
	if x != nil {
		return x.HomeTeam
	}
	return ""
}

func (x *ResultScore) GetAwayTeam() string {
	if x != nil {
		return x.AwayTeam
	}
	return ""
}

func (x *ResultScore) GetYellowCardHome() int32 {
	if x != nil {
		return x.YellowCardHome
	}
	return 0
}

func (x *ResultScore) GetYellowCardAway() int32 {
	if x != nil {
		return x.YellowCardAway
	}
	return 0
}

func (x *ResultScore) GetRedCardHome() int32 {
	if x != nil {
		return x.RedCardHome
	}
	return 0
}

func (x *ResultScore) GetRedCardAway() int32 {
	if x != nil {
		return x.RedCardAway
	}
	return 0
}

type ResultScoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId string `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
}

func (x *ResultScoreRequest) Reset() {
	*x = ResultScoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultScoreRequest) ProtoMessage() {}

func (x *ResultScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultScoreRequest.ProtoReflect.Descriptor instead.
func (*ResultScoreRequest) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{8}
}

func (x *ResultScoreRequest) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

type SumScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId      string `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	HomeTeamGoal int32  `protobuf:"varint,2,opt,name=home_team_goal,json=homeTeamGoal,proto3" json:"home_team_goal,omitempty"`
	HomeTeamName string `protobuf:"bytes,3,opt,name=home_team_name,json=homeTeamName,proto3" json:"home_team_name,omitempty"`
	AwayTeamGoal int32  `protobuf:"varint,4,opt,name=away_team_goal,json=awayTeamGoal,proto3" json:"away_team_goal,omitempty"`
	AwayTeamName string `protobuf:"bytes,5,opt,name=away_team_name,json=awayTeamName,proto3" json:"away_team_name,omitempty"`
	MatchRound   string `protobuf:"bytes,6,opt,name=match_round,json=matchRound,proto3" json:"match_round,omitempty"`
	Time         string `protobuf:"bytes,7,opt,name=time,proto3" json:"time,omitempty"`
	Stadium      string `protobuf:"bytes,8,opt,name=stadium,proto3" json:"stadium,omitempty"`
	Score        string `protobuf:"bytes,9,opt,name=score,proto3" json:"score,omitempty"`
	HomeLogo     string `protobuf:"bytes,10,opt,name=home_logo,json=homeLogo,proto3" json:"home_logo,omitempty"`
	AwayLogo     string `protobuf:"bytes,11,opt,name=away_logo,json=awayLogo,proto3" json:"away_logo,omitempty"`
}

func (x *SumScore) Reset() {
	*x = SumScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SumScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SumScore) ProtoMessage() {}

func (x *SumScore) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SumScore.ProtoReflect.Descriptor instead.
func (*SumScore) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{9}
}

func (x *SumScore) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *SumScore) GetHomeTeamGoal() int32 {
	if x != nil {
		return x.HomeTeamGoal
	}
	return 0
}

func (x *SumScore) GetHomeTeamName() string {
	if x != nil {
		return x.HomeTeamName
	}
	return ""
}

func (x *SumScore) GetAwayTeamGoal() int32 {
	if x != nil {
		return x.AwayTeamGoal
	}
	return 0
}

func (x *SumScore) GetAwayTeamName() string {
	if x != nil {
		return x.AwayTeamName
	}
	return ""
}

func (x *SumScore) GetMatchRound() string {
	if x != nil {
		return x.MatchRound
	}
	return ""
}

func (x *SumScore) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *SumScore) GetStadium() string {
	if x != nil {
		return x.Stadium
	}
	return ""
}

func (x *SumScore) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

func (x *SumScore) GetHomeLogo() string {
	if x != nil {
		return x.HomeLogo
	}
	return ""
}

func (x *SumScore) GetAwayLogo() string {
	if x != nil {
		return x.AwayLogo
	}
	return ""
}

type ResultScoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *ResultScore `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Message string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ResultScoreResponse) Reset() {
	*x = ResultScoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultScoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultScoreResponse) ProtoMessage() {}

func (x *ResultScoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultScoreResponse.ProtoReflect.Descriptor instead.
func (*ResultScoreResponse) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{10}
}

func (x *ResultScoreResponse) GetData() *ResultScore {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResultScoreResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ResultScoreListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []*ResultScore `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Message string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ResultScoreListResponse) Reset() {
	*x = ResultScoreListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultScoreListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultScoreListResponse) ProtoMessage() {}

func (x *ResultScoreListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultScoreListResponse.ProtoReflect.Descriptor instead.
func (*ResultScoreListResponse) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{11}
}

func (x *ResultScoreListResponse) GetData() []*ResultScore {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResultScoreListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ResultSumScoreListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []*SumScore `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Message string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ResultSumScoreListResponse) Reset() {
	*x = ResultSumScoreListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultSumScoreListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultSumScoreListResponse) ProtoMessage() {}

func (x *ResultSumScoreListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultSumScoreListResponse.ProtoReflect.Descriptor instead.
func (*ResultSumScoreListResponse) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{12}
}

func (x *ResultSumScoreListResponse) GetData() []*SumScore {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResultSumScoreListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RoundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Round string `protobuf:"bytes,1,opt,name=round,proto3" json:"round,omitempty"`
}

func (x *RoundRequest) Reset() {
	*x = RoundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundRequest) ProtoMessage() {}

func (x *RoundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundRequest.ProtoReflect.Descriptor instead.
func (*RoundRequest) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{13}
}

func (x *RoundRequest) GetRound() string {
	if x != nil {
		return x.Round
	}
	return ""
}

type MatchCalendarResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubOneName string `protobuf:"bytes,1,opt,name=club_one_name,json=clubOneName,proto3" json:"club_one_name,omitempty"`
	ClubTwoName string `protobuf:"bytes,2,opt,name=club_two_name,json=clubTwoName,proto3" json:"club_two_name,omitempty"`
	IntendTime  string `protobuf:"bytes,3,opt,name=intend_time,json=intendTime,proto3" json:"intend_time,omitempty"`
	RealTime    string `protobuf:"bytes,4,opt,name=real_time,json=realTime,proto3" json:"real_time,omitempty"`
	MatchRound  int32  `protobuf:"varint,5,opt,name=match_round,json=matchRound,proto3" json:"match_round,omitempty"`
	MatchTurn   string `protobuf:"bytes,6,opt,name=match_turn,json=matchTurn,proto3" json:"match_turn,omitempty"`
	Stadium     string `protobuf:"bytes,7,opt,name=stadium,proto3" json:"stadium,omitempty"`
	Season      string `protobuf:"bytes,8,opt,name=season,proto3" json:"season,omitempty"`
	MatchStatus string `protobuf:"bytes,9,opt,name=match_status,json=matchStatus,proto3" json:"match_status,omitempty"`
}

func (x *MatchCalendarResponse_Data) Reset() {
	*x = MatchCalendarResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchCalendarResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchCalendarResponse_Data) ProtoMessage() {}

func (x *MatchCalendarResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchCalendarResponse_Data.ProtoReflect.Descriptor instead.
func (*MatchCalendarResponse_Data) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{3, 0}
}

func (x *MatchCalendarResponse_Data) GetClubOneName() string {
	if x != nil {
		return x.ClubOneName
	}
	return ""
}

func (x *MatchCalendarResponse_Data) GetClubTwoName() string {
	if x != nil {
		return x.ClubTwoName
	}
	return ""
}

func (x *MatchCalendarResponse_Data) GetIntendTime() string {
	if x != nil {
		return x.IntendTime
	}
	return ""
}

func (x *MatchCalendarResponse_Data) GetRealTime() string {
	if x != nil {
		return x.RealTime
	}
	return ""
}

func (x *MatchCalendarResponse_Data) GetMatchRound() int32 {
	if x != nil {
		return x.MatchRound
	}
	return 0
}

func (x *MatchCalendarResponse_Data) GetMatchTurn() string {
	if x != nil {
		return x.MatchTurn
	}
	return ""
}

func (x *MatchCalendarResponse_Data) GetStadium() string {
	if x != nil {
		return x.Stadium
	}
	return ""
}

func (x *MatchCalendarResponse_Data) GetSeason() string {
	if x != nil {
		return x.Season
	}
	return ""
}

func (x *MatchCalendarResponse_Data) GetMatchStatus() string {
	if x != nil {
		return x.MatchStatus
	}
	return ""
}

var File_match_proto protoreflect.FileDescriptor

var file_match_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xfa, 0x02, 0x0a, 0x0d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x61, 0x6c, 0x65, 0x6e,
	0x64, 0x61, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x6f, 0x6e, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x62,
	0x4f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x75, 0x62, 0x5f,
	0x74, 0x77, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6c, 0x75, 0x62, 0x54, 0x77, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x65, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x75, 0x72, 0x6e, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x64, 0x5f,
	0x63, 0x6c, 0x75, 0x62, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x64, 0x43, 0x6c, 0x75, 0x62, 0x4f, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x64, 0x5f,
	0x63, 0x6c, 0x75, 0x62, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x64, 0x43, 0x6c, 0x75, 0x62, 0x54, 0x77, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x64, 0x69, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x26,
	0x0a, 0x14, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x8c, 0x03, 0x0a, 0x15, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0xa1, 0x02, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x6f, 0x6e, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x62,
	0x4f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x75, 0x62, 0x5f,
	0x74, 0x77, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6c, 0x75, 0x62, 0x54, 0x77, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x65, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x75, 0x72, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61,
	0x64, 0x69, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x64,
	0x69, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6c,
	0x0a, 0x19, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa9, 0x01, 0x0a,
	0x0d, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x75,
	0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x75, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x61, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x61, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x5f,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x49, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x22, 0xa8, 0x01, 0x0a, 0x0c, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x61, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x62, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x22, 0xca, 0x02, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0e, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x67, 0x6f, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x47, 0x6f, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x77, 0x61, 0x79, 0x5f, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x77,
	0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f,
	0x6d, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x77, 0x61, 0x79, 0x5f,
	0x74, 0x65, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x77, 0x61, 0x79,
	0x54, 0x65, 0x61, 0x6d, 0x12, 0x28, 0x0a, 0x10, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x61, 0x72, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x77,
	0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77,
	0x43, 0x61, 0x72, 0x64, 0x41, 0x77, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x72, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d,
	0x72, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x77, 0x61, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x41, 0x77, 0x61, 0x79,
	0x22, 0x2f, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x64, 0x22, 0xdc, 0x02, 0x0a, 0x08, 0x53, 0x75, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x6f, 0x6d,
	0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x47, 0x6f, 0x61, 0x6c, 0x12,
	0x24, 0x0a, 0x0e, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x77, 0x61, 0x79, 0x5f, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61,
	0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x61,
	0x77, 0x61, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x64, 0x69, 0x75,
	0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x64, 0x69, 0x75, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x6c,
	0x6f, 0x67, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x4c,
	0x6f, 0x67, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x77, 0x61, 0x79, 0x5f, 0x6c, 0x6f, 0x67, 0x6f,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x77, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x6f,
	0x22, 0x57, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5b, 0x0a, 0x17, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5b, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x53, 0x75, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x6d, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x24, 0x0a, 0x0c, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x73, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x0a, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x4e, 0x4d, 0x43, 0x4e, 0x50, 0x4d, 0x2d, 0x66, 0x6f, 0x6f, 0x74, 0x62, 0x61, 0x6c, 0x6c,
	0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x67, 0x65, 0x6e, 0xa2, 0x02, 0x03, 0x50,
	0x58, 0x58, 0xaa, 0x02, 0x05, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0xca, 0x02, 0x05, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0xe2, 0x02, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x05, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_match_proto_rawDescOnce sync.Once
	file_match_proto_rawDescData = file_match_proto_rawDesc
)

func file_match_proto_rawDescGZIP() []byte {
	file_match_proto_rawDescOnce.Do(func() {
		file_match_proto_rawDescData = protoimpl.X.CompressGZIP(file_match_proto_rawDescData)
	})
	return file_match_proto_rawDescData
}

var file_match_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_match_proto_goTypes = []interface{}{
	(*MatchCalendar)(nil),              // 0: proto.MatchCalendar
	(*MatchCalendarRequest)(nil),       // 1: proto.MatchCalendarRequest
	(*StatusRequest)(nil),              // 2: proto.StatusRequest
	(*MatchCalendarResponse)(nil),      // 3: proto.MatchCalendarResponse
	(*MatchCalendarListResponse)(nil),  // 4: proto.MatchCalendarListResponse
	(*ProgressScore)(nil),              // 5: proto.ProgressScore
	(*ProgressCard)(nil),               // 6: proto.ProgressCard
	(*ResultScore)(nil),                // 7: proto.ResultScore
	(*ResultScoreRequest)(nil),         // 8: proto.ResultScoreRequest
	(*SumScore)(nil),                   // 9: proto.SumScore
	(*ResultScoreResponse)(nil),        // 10: proto.ResultScoreResponse
	(*ResultScoreListResponse)(nil),    // 11: proto.ResultScoreListResponse
	(*ResultSumScoreListResponse)(nil), // 12: proto.ResultSumScoreListResponse
	(*RoundRequest)(nil),               // 13: proto.RoundRequest
	(*MatchCalendarResponse_Data)(nil), // 14: proto.MatchCalendarResponse.Data
}
var file_match_proto_depIdxs = []int32{
	14, // 0: proto.MatchCalendarResponse.data:type_name -> proto.MatchCalendarResponse.Data
	14, // 1: proto.MatchCalendarListResponse.data:type_name -> proto.MatchCalendarResponse.Data
	7,  // 2: proto.ResultScoreResponse.data:type_name -> proto.ResultScore
	7,  // 3: proto.ResultScoreListResponse.data:type_name -> proto.ResultScore
	9,  // 4: proto.ResultSumScoreListResponse.data:type_name -> proto.SumScore
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_match_proto_init() }
func file_match_proto_init() {
	if File_match_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_match_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchCalendar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchCalendarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchCalendarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchCalendarListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgressScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgressCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultScoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SumScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultScoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultScoreListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultSumScoreListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchCalendarResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_match_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_match_proto_goTypes,
		DependencyIndexes: file_match_proto_depIdxs,
		MessageInfos:      file_match_proto_msgTypes,
	}.Build()
	File_match_proto = out.File
	file_match_proto_rawDesc = nil
	file_match_proto_goTypes = nil
	file_match_proto_depIdxs = nil
}
